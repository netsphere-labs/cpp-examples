
# See 正規表現でのメールアドレスチェックは見直すべき – ReDoS
#     https://blog.ohgaki.net/redos-must-review-mail-address-validation
#  -> 例が適切ではない。書き誤った正規表現をあげつらってどうする?
#     単にマッチするものすら正しく書くのが難しい、という指摘なら、仰るとおり!

# これは脆弱. `@` の前の `.` が何にでもマッチしてしまう。単に書き誤り.
#re = /\A([\w+\-].?)+@[a-z\d\-]+(\.[a-z]+)*\.[a-z]+\z/i

# 定義から導出 -> 特に爆発しない (ように書いている).
#re = /^((?:[A-Za-z0-9!#$%&'*+\-\/=?^_`{|}~]{1,64}(?:\.[A-Za-z0-9!#$%&'*+\-\/=?^_`{|}~]{1,62}){0,31}|"(?:[\x21\x23-\x5B\x5D-\x7E]|\\[\x20-~]){0,62}"))@((?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?\.){0,127}[A-Za-z](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?)|(?:\[(?:(?:[0-9]{1,3}(?:\.[0-9]{1,3}){3})|(?:(?:[0-9A-Fa-f]{1,4})?(?:(?:::|:)(?:[0-9A-Fa-f]{1,4})){1,7}(?:(?:::|:)(?:[0-9]{1,3}(?:\.[0-9]{1,3}){3}))?))\]))$/

# これなら? 厳密な定義ではないが、上のを修正した。
#   -> まだ爆発するが, 31K バイトぐらい伸ばさないといけない.
#      これなら入力テキスト長を制限すればOK.
# \w [a-zA-Z_0-9]
re = /\A([\w+\-~]+(?:\.[\w+\-~]+)*)@((?:[a-z\d](?:[a-z\d-]*[a-z\d])?\.)*(?:[a-z]+[a-z\d]?))\z/i

# HTML5 <input type="email"> の正規表現
# メイルアドレスの定義とは違うが、ReDoS safe.
re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/

(5..12).each do |n|
  s = "username@host" + ".abcde" * n + "." # 末尾でマッチしない.
  start = Time.now()
  p re =~ s
  p s.length.to_s + ': ' + (Time.now() - start).to_s
end
